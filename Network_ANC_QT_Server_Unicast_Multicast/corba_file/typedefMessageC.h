// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0a
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:150

#ifndef _TAO_IDL_TYPEDEFMESSAGEC_RC98WW_H_
#define _TAO_IDL_TYPEDEFMESSAGEC_RC98WW_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/Messaging/Messaging.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 0 || TAO_BETA_VERSION != 4
#error This file should be regenerated with TAO_IDL from version 2.0a
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:41

namespace LocalInterface
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:41

  namespace BaseTypes
  {

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:369

    typedef ::CORBA::Boolean tbBoolean;
    typedef ::CORBA::Boolean_out tbBoolean_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:39

    extern  ::CORBA::TypeCode_ptr const _tc_tbBoolean;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:369

    typedef ::CORBA::Short tnInt16;
    typedef ::CORBA::Short_out tnInt16_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:39

    extern  ::CORBA::TypeCode_ptr const _tc_tnInt16;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:369

    typedef ::CORBA::Long tnInt32;
    typedef ::CORBA::Long_out tnInt32_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:39

    extern  ::CORBA::TypeCode_ptr const _tc_tnInt32;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:403

    typedef char * tnString;
    typedef ::CORBA::String_var tnString_var;
    typedef ::CORBA::String_out tnString_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:39

    extern  ::CORBA::TypeCode_ptr const _tc_tnString;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:369

    typedef ::CORBA::UShort tnUInt16;
    typedef ::CORBA::UShort_out tnUInt16_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:39

    extern  ::CORBA::TypeCode_ptr const _tc_tnUInt16;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:369

    typedef ::CORBA::Char tnUInt2;
    typedef ::CORBA::Char_out tnUInt2_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:39

    extern  ::CORBA::TypeCode_ptr const _tc_tnUInt2;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:369

    typedef ::CORBA::ULong tnUInt32;
    typedef ::CORBA::ULong_out tnUInt32_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:39

    extern  ::CORBA::TypeCode_ptr const _tc_tnUInt32;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:369

    typedef ::CORBA::Double trFloat64;
    typedef ::CORBA::Double_out trFloat64_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:39

    extern  ::CORBA::TypeCode_ptr const _tc_trFloat64;

    // TAO_IDL - Generated from
    // be/be_visitor_enum/enum_ch.cpp:47

    enum SwitchNTP_ServerEnum
    {
      SwitchToPrimary,
      SwitchToSecondary,
      SwitchToInternal
    };

    typedef SwitchNTP_ServerEnum &SwitchNTP_ServerEnum_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:39

    extern  ::CORBA::TypeCode_ptr const _tc_SwitchNTP_ServerEnum;

    // TAO_IDL - Generated from
    // be/be_visitor_enum/enum_ch.cpp:47

    enum SourceDestinationEnum
    {
      MICS,
      Sensor,
      Launcher,
      Other
    };

    typedef SourceDestinationEnum &SourceDestinationEnum_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:39

    extern  ::CORBA::TypeCode_ptr const _tc_SourceDestinationEnum;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:70
  
  } // module LocalInterface::BaseTypes

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:41

  namespace CompositeTypes
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct MessageHeaderStruct;

    typedef
      ::TAO_Fixed_Var_T<
          MessageHeaderStruct
        >
      MessageHeaderStruct_var;
    
    typedef
      MessageHeaderStruct &
      MessageHeaderStruct_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:49

    struct  MessageHeaderStruct
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307
      
      typedef MessageHeaderStruct_var _var_type;
      typedef MessageHeaderStruct_out _out_type;

      static void _tao_any_destructor (void *);
      
      LocalInterface::BaseTypes::SourceDestinationEnum Source;
      LocalInterface::BaseTypes::tnUInt32 ResponseID;
      LocalInterface::BaseTypes::tnUInt32 MessageLength;
      LocalInterface::BaseTypes::tnUInt32 MessageID;
      LocalInterface::BaseTypes::SourceDestinationEnum Destination;
      LocalInterface::BaseTypes::trFloat64 TimeStamp;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:39

    extern  ::CORBA::TypeCode_ptr const _tc_MessageHeaderStruct;

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct cmdUpdateParametersCompType;

    typedef
      ::TAO_Fixed_Var_T<
          cmdUpdateParametersCompType
        >
      cmdUpdateParametersCompType_var;
    
    typedef
      cmdUpdateParametersCompType &
      cmdUpdateParametersCompType_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:49

    struct  cmdUpdateParametersCompType
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307
      
      typedef cmdUpdateParametersCompType_var _var_type;
      typedef cmdUpdateParametersCompType_out _out_type;

      static void _tao_any_destructor (void *);
      
      LocalInterface::CompositeTypes::MessageHeaderStruct Header;
      LocalInterface::BaseTypes::tnUInt32 PrimaryNTP_ServIP_Addr;
      LocalInterface::BaseTypes::tnUInt32 SecondaryNTP_ServIP_Addr;
      LocalInterface::BaseTypes::tnInt16 TimeCorrection;
      LocalInterface::BaseTypes::tnUInt16 NTP_Threshold;
      LocalInterface::BaseTypes::tnUInt32 PrivateHostAddr;
      LocalInterface::BaseTypes::tnUInt32 PrivateHostMask;
      LocalInterface::BaseTypes::tnUInt16 PrivateHostPort;
      LocalInterface::BaseTypes::tnUInt32 PublicVoIP_Addr;
      LocalInterface::BaseTypes::tnUInt32 PublicVoIP_Mask;
      LocalInterface::BaseTypes::tnUInt16 PublicVoIP_Port;
      LocalInterface::BaseTypes::tnUInt32 PublicHostAddr;
      LocalInterface::BaseTypes::tnUInt32 PublicHostMask;
      LocalInterface::BaseTypes::tnUInt32 PrivateRR_EthernetAddr;
      LocalInterface::BaseTypes::tnUInt32 PrivateRR_Mask;
      LocalInterface::BaseTypes::tnUInt32 PublicRR_Addr;
      LocalInterface::BaseTypes::tnUInt32 PublicRR_Mask;
      LocalInterface::BaseTypes::tnUInt32 PrivateRP_Addr;
      LocalInterface::BaseTypes::tnUInt32 PrivateRP_Mask;
      LocalInterface::BaseTypes::tnUInt16 PrivateRP_Port;
      LocalInterface::BaseTypes::tnUInt32 PublicRP_Addr;
      LocalInterface::BaseTypes::tnUInt32 PublicRP_Mask;
      LocalInterface::BaseTypes::tnUInt32 MulticastGroupAddr;
      LocalInterface::BaseTypes::SwitchNTP_ServerEnum SwitchNTP_Server;
      LocalInterface::BaseTypes::tnUInt32 PrivateRR_FiberAddr;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:39

    extern  ::CORBA::TypeCode_ptr const _tc_cmdUpdateParametersCompType;

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct cmdUpdateParametersCompTypeNew;

    typedef
      ::TAO_Fixed_Var_T<
          cmdUpdateParametersCompTypeNew
        >
      cmdUpdateParametersCompTypeNew_var;
    
    typedef
      cmdUpdateParametersCompTypeNew &
      cmdUpdateParametersCompTypeNew_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:49

    struct  cmdUpdateParametersCompTypeNew
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307
      
      typedef cmdUpdateParametersCompTypeNew_var _var_type;
      typedef cmdUpdateParametersCompTypeNew_out _out_type;

      static void _tao_any_destructor (void *);
      
      LocalInterface::BaseTypes::tnUInt32 Val1;
      LocalInterface::BaseTypes::tnUInt32 Val2;
      LocalInterface::BaseTypes::tnInt16 Eta;
      LocalInterface::BaseTypes::tnUInt16 Figli;
      LocalInterface::BaseTypes::tnUInt32 Famigliari;
      LocalInterface::BaseTypes::tnUInt32 Tel1;
      LocalInterface::BaseTypes::tnUInt16 Tel2;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:39

    extern  ::CORBA::TypeCode_ptr const _tc_cmdUpdateParametersCompTypeNew;

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct cmdUpdateParametersCompTypeLogic;

    typedef
      ::TAO_Fixed_Var_T<
          cmdUpdateParametersCompTypeLogic
        >
      cmdUpdateParametersCompTypeLogic_var;
    
    typedef
      cmdUpdateParametersCompTypeLogic &
      cmdUpdateParametersCompTypeLogic_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:49

    struct  cmdUpdateParametersCompTypeLogic
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307
      
      typedef cmdUpdateParametersCompTypeLogic_var _var_type;
      typedef cmdUpdateParametersCompTypeLogic_out _out_type;

      static void _tao_any_destructor (void *);
      
      LocalInterface::BaseTypes::tnInt16 Eta;
      LocalInterface::BaseTypes::tnUInt16 Figli;
      LocalInterface::BaseTypes::tnUInt32 Famigliari;
      LocalInterface::BaseTypes::tnUInt32 Tel;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:39

    extern  ::CORBA::TypeCode_ptr const _tc_cmdUpdateParametersCompTypeLogic;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:70
  
  } // module LocalInterface::CompositeTypes

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:70

} // module LocalInterface

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:308

#if !defined (_MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Value_Traits<Messaging::ExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::LocalInterface::BaseTypes::SwitchNTP_ServerEnum>
    : public
        Basic_Arg_Traits_T<
            ::LocalInterface::BaseTypes::SwitchNTP_ServerEnum,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::LocalInterface::BaseTypes::SourceDestinationEnum>
    : public
        Basic_Arg_Traits_T<
            ::LocalInterface::BaseTypes::SourceDestinationEnum,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::LocalInterface::CompositeTypes::MessageHeaderStruct>
    : public
        Fixed_Size_Arg_Traits_T<
            ::LocalInterface::CompositeTypes::MessageHeaderStruct,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::LocalInterface::CompositeTypes::cmdUpdateParametersCompType>
    : public
        Fixed_Size_Arg_Traits_T<
            ::LocalInterface::CompositeTypes::cmdUpdateParametersCompType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeNew>
    : public
        Fixed_Size_Arg_Traits_T<
            ::LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeNew,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeLogic>
    : public
        Fixed_Size_Arg_Traits_T<
            ::LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeLogic,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace LocalInterface
{
  
  namespace BaseTypes
  {
    

     void operator<<= (::CORBA::Any &, ::LocalInterface::BaseTypes::SwitchNTP_ServerEnum);
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::LocalInterface::BaseTypes::SwitchNTP_ServerEnum &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, LocalInterface::BaseTypes::SwitchNTP_ServerEnum);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, LocalInterface::BaseTypes::SwitchNTP_ServerEnum &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:43

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace LocalInterface
{
  
  namespace BaseTypes
  {
    

     void operator<<= (::CORBA::Any &, ::LocalInterface::BaseTypes::SourceDestinationEnum);
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::LocalInterface::BaseTypes::SourceDestinationEnum &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, LocalInterface::BaseTypes::SourceDestinationEnum);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, LocalInterface::BaseTypes::SourceDestinationEnum &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace LocalInterface
{
  
  namespace CompositeTypes
  {
     void operator<<= (::CORBA::Any &, const ::LocalInterface::CompositeTypes::MessageHeaderStruct &); // copying version
     void operator<<= (::CORBA::Any &, ::LocalInterface::CompositeTypes::MessageHeaderStruct*); // noncopying version
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::LocalInterface::CompositeTypes::MessageHeaderStruct *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::LocalInterface::CompositeTypes::MessageHeaderStruct *&);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const LocalInterface::CompositeTypes::MessageHeaderStruct &); // copying version
 void operator<<= (::CORBA::Any &, LocalInterface::CompositeTypes::MessageHeaderStruct*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, LocalInterface::CompositeTypes::MessageHeaderStruct *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const LocalInterface::CompositeTypes::MessageHeaderStruct *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace LocalInterface
{
  
  namespace CompositeTypes
  {
     void operator<<= (::CORBA::Any &, const ::LocalInterface::CompositeTypes::cmdUpdateParametersCompType &); // copying version
     void operator<<= (::CORBA::Any &, ::LocalInterface::CompositeTypes::cmdUpdateParametersCompType*); // noncopying version
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::LocalInterface::CompositeTypes::cmdUpdateParametersCompType *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::LocalInterface::CompositeTypes::cmdUpdateParametersCompType *&);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const LocalInterface::CompositeTypes::cmdUpdateParametersCompType &); // copying version
 void operator<<= (::CORBA::Any &, LocalInterface::CompositeTypes::cmdUpdateParametersCompType*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, LocalInterface::CompositeTypes::cmdUpdateParametersCompType *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const LocalInterface::CompositeTypes::cmdUpdateParametersCompType *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace LocalInterface
{
  
  namespace CompositeTypes
  {
     void operator<<= (::CORBA::Any &, const ::LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeNew &); // copying version
     void operator<<= (::CORBA::Any &, ::LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeNew*); // noncopying version
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeNew *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeNew *&);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeNew &); // copying version
 void operator<<= (::CORBA::Any &, LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeNew*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeNew *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeNew *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace LocalInterface
{
  
  namespace CompositeTypes
  {
     void operator<<= (::CORBA::Any &, const ::LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeLogic &); // copying version
     void operator<<= (::CORBA::Any &, ::LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeLogic*); // noncopying version
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeLogic *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeLogic *&);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeLogic &); // copying version
 void operator<<= (::CORBA::Any &, LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeLogic*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeLogic *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeLogic *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, LocalInterface::BaseTypes::SwitchNTP_ServerEnum _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, LocalInterface::BaseTypes::SwitchNTP_ServerEnum &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, LocalInterface::BaseTypes::SourceDestinationEnum _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, LocalInterface::BaseTypes::SourceDestinationEnum &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const LocalInterface::CompositeTypes::MessageHeaderStruct &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, LocalInterface::CompositeTypes::MessageHeaderStruct &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const LocalInterface::CompositeTypes::cmdUpdateParametersCompType &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, LocalInterface::CompositeTypes::cmdUpdateParametersCompType &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeNew &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeNew &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeLogic &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, LocalInterface::CompositeTypes::cmdUpdateParametersCompTypeLogic &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1581
#if defined (__ACE_INLINE__)
#include "typedefMessageC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

